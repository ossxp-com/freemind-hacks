From: Jiang Xin <jiangxin@moon.ossxp.com>
Subject: [PATCH] t/filter_all_illegal_xml_chars

Encode illegal chars to html entities.

Signed-off-by: Jiang Xin <jiangxin@moon.ossxp.com>

---
 freemind/modes/NodeAdapter.java |    6 +++---
 1 files changed, 3 insertions(+), 3 deletions(-)

diff --git a/freemind/modes/NodeAdapter.java b/freemind/modes/NodeAdapter.java
index cfef28b..8f683a4 100644
--- a/freemind/modes/NodeAdapter.java
+++ b/freemind/modes/NodeAdapter.java
@@ -209,7 +209,7 @@ public abstract class NodeAdapter implements MindMapNode {
 
     /** \0 is not allowed: */
     private String makeValidXml(String pXmlNoteText) {
-        return pXmlNoteText.replaceAll("\0", "").replaceAll("&#0;", "");
+        return pXmlNoteText.replaceAll("[\0-\u0008]|\u000B|\u000C|[\u000E-\u001F]|[\uD800-\uDFFF]|\uFFFE|\uFFFF", "").replaceAll("&#0;", "");
     }
     /* ************************************************************
      * ********     Notes                                   *******
@@ -978,14 +978,14 @@ freemind.main.Resources.getInstance().logException(			e);
             XMLElement htmlElement = new XMLElement();
             htmlElement.setName(XMLElementAdapter.XML_NODE_XHTML_CONTENT_TAG);
             htmlElement.setAttribute(XMLElementAdapter.XML_NODE_XHTML_TYPE_TAG, XMLElementAdapter.XML_NODE_XHTML_TYPE_NODE);
-            htmlElement.setEncodedContent(getXmlText().replace('\0', ' '));
+            htmlElement.setEncodedContent(this.makeValidXml(getXmlText()));
             node.addChild(htmlElement);
         }
         if(getXmlNoteText()!= null){
 	        	XMLElement htmlElement = new XMLElement();
 	        	htmlElement.setName(XMLElementAdapter.XML_NODE_XHTML_CONTENT_TAG);
 	        	htmlElement.setAttribute(XMLElementAdapter.XML_NODE_XHTML_TYPE_TAG, XMLElementAdapter.XML_NODE_XHTML_TYPE_NOTE);
-	        	htmlElement.setEncodedContent(getXmlNoteText().replace('\0', ' '));
+	        	htmlElement.setEncodedContent(this.makeValidXml(getXmlNoteText()));
 	        	node.addChild(htmlElement);
         	
         }
-- 
tg: (918d0c3..) t/filter_all_illegal_xml_chars (depends on: master)
